// ๐ ูุฐุง ุงูููู ูุญุชูู ุนูู ููุฏูู ุงูู Feedback
// ูุณุชุฎุฏู ูุชุฎุฒูู ุงูุชููููุงุช ูุงูุชุนูููุงุช ุงูุชู ูููู ุจูุง ุงููุณุชุฎุฏููู ุนูู ุจุนุถูู ุงูุจุนุถ
// ูุญุชูู ุนูู ูุนูููุงุช ุนู ุงููุณุชุฎุฏู ุงููุฑุณู ูุงููุณุชูุจู ููุชููููุ ุงูุชูููู ููุณูุ ูุงูุชุนููู
// ูุชู ุญูุธ ุงูุชุงุฑูุฎ ุจุดูู ุชููุงุฆู ูุน ุฅูุดุงุก ุฃู ุชุนุฏูู ุฃู ุณุฌู

import mongoose from "mongoose";

const feedbackSchema = new mongoose.Schema(
  {
    // ูุนุฑู ุงููุณุชุฎุฏู ุงููุณุชูู ููุชูููู (ูุทููุจ)
    toUserId: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: "User", 
      required: [true, "ุงููุณุชุฎุฏู ุงููุณุชูู ููุชูููู ูุทููุจ"] 
    },

    // ูุนุฑู ุงููุณุชุฎุฏู ุงูุฐู ูุงู ุจูุชุงุจุฉ ุงูุชูููู (ุงุฎุชูุงุฑู ูู ุญุงูุฉ ูุงู ุงูุชูููู ูุฌููู)
    fromUserId: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: "User" 
    },

    // ุงูุชูููู ุจุงูุฃุฑูุงู ูู 1 ุฅูู 5 (ูุทููุจ)
    rating: { 
      type: Number, 
      min: [1, "ุฃูู ุชูููู ูู 1"], 
      max: [5, "ุฃุนูู ุชูููู ูู 5"], 
      required: [true, "ุงูุชูููู ูุทููุจ"] 
    },

    // ุงูุชุนููู ุงููุตู ุนูู ุงูุชูููู (ุงุฎุชูุงุฑู)
    comment: { 
      type: String, 
      default: "" 
    },

    // ุชุงุฑูุฎ ุฅุฑุณุงู ุงูุชูููู (ูุชู ุชุญุฏูุฏู ุชููุงุฆูุงู)
    date: { 
      type: Date, 
      default: Date.now 
    },
  },
  { 
    timestamps: true // ุฅุถุงูุฉ createdAt ู updatedAt ุชููุงุฆูุงู
  }
);

const Feedback = mongoose.model("Feedback", feedbackSchema);
export default Feedback;
