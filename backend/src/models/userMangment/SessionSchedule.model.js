// ๐ ูุฐุง ุงูููุฏูู ุฎุงุต ุจุฌุฏููุฉ ุงูุญุตุต (Session Schedule) ููุฎุฒู ููุงุนูุฏ ุงูุญุตุต
// ููู ูุณุชุฎุฏู (ูุฏุฑุจ ุฃู ูุชุฏุฑุจ) ูุน ุชุงุฑูุฎ ุงูุญุตุฉ ูุชูููุชูุง ููุตููุง
import mongoose from "mongoose";

const sessionScheduleSchema = new mongoose.Schema(
  {
    // ๐น ูุนุฑู ุงููุณุชุฎุฏู ุงููุฑุชุจุท ุจุงูุญุตุฉ
    userId: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: "User", 
      required: true 
    },

    // ๐น ุชุงุฑูุฎ ุงูุญุตุฉ (ุฅุฌุจุงุฑู)
    date: { 
      type: Date, 
      required: true 
    },

    // ๐น ููุช ุจุฏุก ุงูุญุตุฉ (ุฅุฌุจุงุฑู)
    startTime: { 
      type: String, 
      required: true 
    },

    // ๐น ููุช ููุงูุฉ ุงูุญุตุฉ (ุฅุฌุจุงุฑู)
    endTime: { 
      type: String, 
      required: true 
    },

    // ๐น ูุตู ุฃู ููุงุญุธุงุช ุนู ุงูุญุตุฉ
    description: { 
      type: String, 
      default: "" 
    }
  },
  { 
    timestamps: true // ุชุงุฑูุฎ ุงูุฅูุดุงุก ูุงูุชุนุฏูู ุชููุงุฆูุงู
  }
);

// ๐ ุชุนุฑูู ุงูููุฏูู
const SessionSchedule = mongoose.model("SessionSchedule", sessionScheduleSchema);

export default SessionSchedule;
